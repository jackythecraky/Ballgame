Practical 1

AIM : Create two web services, client and server respectively to illustrate how server
can invoke tester and methods to fetch details and display them to client.

F_to_C 
Double c = (f-32)*1.8;
return c;
C_To_F
Double f = (c*1.8)-32;
return f;

PRACTICAL 2

AIM : Creating a web service with Calculator example.

PRACTICAL 3

AIM : NSE BSE GOLD Web Service.

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.jws.WebService;
import javax.jws.WebMethod;
@WebService(serviceName = "IndexWebService")
public class IndexWebService {
Connection con;
Statement st;
ResultSetrs;
float nse, bse, gold;
@WebMethod(operationName = "getNSE")
public float getNSE(){
try
con = DriverManager.getConnection("jdbc:derby://localhost:1527/Friends", "JAVADB", "123");
st=con.createStatement();
rs=st.executeQuery("select * from INDEX");
rs.next();
nse=Float.parseFloat(rs.getString(1)); 
}
catch(Exception e){
System.out.println(e.getMessage());
}
return nse;
}

PRACTICAL 4

AIM : College Web service including course and fees

package Service;
import javax.jws.WebService;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import java.io.*;
import java.sql.*;
@WebService(serviceName = "NewWebService")
public class NewWebService
{
Connection con;
Statement st;
ResultSet rs;
float cutoff, fees;
String coursen ;
@WebMethod(operationName = "getCutOff")
public Float getCutOff(@WebParam(name = "course") String course)
{
//TODO write your implementation code here:
coursen=course;
try
{
con =DriverManager.getConnection("jdbc:derby://localhost:1527/MyDB_Rollno30","admin
30","admin30");
st = con.createStatement();
rs = st.executeQuery("select * from College where Course="+ "\'" + coursen +"\'");
System.out.println(coursen);
rs.next();
cutoff=Float.parseFloat(rs.getString(2));
}
catch( SQLException e){
System.out.println(e.getMessage());
}
return cutoff;
}

Program 6.1

WAP to accept the number from the user at runtime and using while loop display summatio
n of the number 

@WebMethod(operationName = "summation")
    public Integer summation(@WebParam(name = "inp") int inp) {
        int sum = 0;
        for(int i = 0; i <= inp; i++){
            sum += i;
        }
        return sum;
    }
}


Program 6.2

WAP to accept a number from the user and display series 1/1 + 1/2 + 1/3 + ..... + 1/n

@WebMethod(operationName = "series")
    @SuppressWarnings("empty-statement")
    public Double series(@WebParam(name = "inp") double inp) {
        double add, div, i;
        add =1;
        div =0;
        for( i= 1; i <=inp; i++){
        div = 1/i;
        add = add = div;
    }
        return add;
    }
}

Program 7.1

WAP to accept number from the user at the run-time to display first N Fibonacci numbers

@WebMethod(operationName = "fib")
    public String fib(@WebParam(name = "inp") int inp) {
        int i, n1=0,n2=1, res;
        ArrayList<Integer> arrList = new ArrayList<Integer>(inp);
        arrList.add(n1);
        arrList.add(n2);
        for(i=2;i < inp;i++){
            res = n1+n2;
            arrList.add(res);
            n1= n2;
            n2 = res;
        }
        String result = arrList.toString();
        return result;
    }
}

Program 7.2

WAP a program in java to accept n from the user and display answer for the series 

@WebMethod(operationName = "series")
    public Double series(@WebParam(name = "inp") double inp) {
        double sum = 0, fact =1;
        for(int i = 1; i <=inp; i++){
            fact =1;
            for(int j=1; j<=i; j++){
                fact = fact *j; 
            }
           sum = sum + (i/fact);
        }
        return sum;
    }
}

Program 5.2

 WAP to accept number at run-time and display factorial of the number
 
 @WebMethod(operationName = "Factorial")
    public Integer Factorial(@WebParam(name = "inp") int inp) {
        int num = inp;
        int fact =1;
        for(int i=1; i<=num; i ++)
       
            fact = fact*1;
        return fact;
    }
    }

    practical 7.3
    
 @WebMethod(operationName = "reverse")
    public Integer reverse(@WebParam(name = "inp") int inp) {
        int reverse = 0, remainder;
        while(inp != 0){
            remainder = inp % 10;
            reverse = reverse * 10 + remainder;
            inp = inp / 10;
        }
        return reverse;
    }
}
