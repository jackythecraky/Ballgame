
Practical No. 3

3.1. Opening chrome from Eclipse using selenium

NOTE: We are going to use Eclipse IDE for this practical.

    1. Download latest Eclipse IDE (java development) from official site.
    2. Install Eclipse IDE and launch it, set its workspace directory.
    3. Create a new Java Project, set appropriate project name and click on next

    4. Now navigate to Libraries and click on Add External JARs
    5. Add these JARs and click on Finish and a window will popup saying do you want to create module? Just click on don’t create 


Now we are ready to code just create the new class file by right clicking on the “src” folder and set appropriate class name like I am using “LaunchChrome” as my class name. Make sure you have latest ChromeDriver.
               Code:
package pract;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

public class LaunchChrome {
	//public static String driverPath="D:\\TYCS28\\eclipse"
	public static WebDriver driver;
		
	public static void main(String[] args) {
			// TODO Auto-generated method stub
		System.out.println("Launching chrome....");
	System.setProperty("webdriver.chrome.driver", "D:\\Documents\\College\\Practicals\\ST\\seleniumjars\\chromedriver-105.exe");
		driver = new ChromeDriver();
		driver.navigate().to("http://google.com");		
		}
}
Now, lets run the program by right clicking on class name click on Run As > 1 Java Application
               

3.2. write a code to search Selenium tutorial in google through code.
               Code:
package pract3;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

public class Search {
	public static void main(String args[]) {
		//System Property for Chrome Driver
		System.setProperty("webdriver.chrome.driver","D:\\Documents\\College\\Practicals\\ST\\seleniumjars\\chromedriver-105.exe");
		// Instantiate a ChromeDriver class.
		WebDriver driver = new ChromeDriver();
		driver.navigate().to("https://google.co.in/");
		//Maximize the browser
		driver.manage().window().maximize();
		//Search on the web
		WebElement element = driver.findElement(By.name("q"));
		element.sendKeys("junit");
		element.submit();
	}
}


3.3. write and test a program to login into Facebook Account use Selenium.
   Code:
package pract3;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

public class LoginIntoFB {
	public static void main(String args[]) {
		//System Property for Chrome Driver
		System.setProperty("webdriver.chrome.driver","D:\\Documents\\College\\Practicals\\ST\\seleniumjars\\chromedriver-105.exe");
		// Instantiate a ChromeDriver class.
		WebDriver driver = new ChromeDriver();
		driver.navigate().to("https://www.facebook.com/");
		//Maximize the browser
		driver.manage().window().maximize();
		//Enter values and submit them
		WebElement elementEmail = driver.findElement(By.name("email"));
		elementEmail.sendKeys("student.unity@proton.me");
		WebElement elementPasswd = driver.findElement(By.name("pass"));
		elementPasswd.sendKeys("Unity@1234");
		WebElement elementSubmit = driver.findElement(By.name("login"));
		elementSubmit.submit();
	}
}
               

       Practical No. 4
       
     Write and test the calculator program using JUnit.

    1. Download JUnit via https://search.maven.org/search?q=g:junit%20AND%20a:junit
    2. Download hamcrest-core 1.3 via https://search.maven.org/artifact/org.hamcrest/hamcrest-core/1.3/jar
    3. Move these 2 JARs to your preferred location or move them to the Selenium JARs folder.
    4. Now launch the Eclipse with your workspace and 
    5. Import these JARs by right click on your project (in Package Explorer) > Build Path > Configure Build Path.
    6. The window will appear
    7. Click on Classpath and click on Add External JARs Button and add those 2 JARs. 
    8. Once done click on Apply and Close.


    1. Create new class file named as Calculator, and write the following code:
public class Calculator {
	public int add(int a, int b) {
        return a + b;
    }
     
    public int subtract(int a, int b) {
        return a - b;
    }
}
    2. Now, Create JUnit Test Case, 

    3. In class under test field click on browse. 

    4. Enter Calculator and select appropriate class from the search.

    5. Click on OK.
    6. Click on Next

    7. Select the 2 Methods of the Calculator, and click on Finish

    8. Template will generate. We will be writing the code in @Test block:

    9. Write the code given below in place of fail("Not yet implemented");
@Test
	public void testAdd() {
		Calculator calculator = new Calculator();
	    int a = 1234;
	    int b = 5678;
	    int actual = calculator.add(a, b);
	 
	    int expected = 6912;
	 
	    assertEquals(expected, actual);
	}

	@Test
	public void testSubtract() {
		Calculator calculator = new Calculator();
	    int a = 1234;
	    int b = 5678;
	    int actual = calculator.substract(b, a);
	 
	    int expected = 4444;
	 
	    assertEquals(expected, actual);
	}

    10. Right click > Run as > 1 JUnit File.
               Output:


       Practical No. 5
       
Write and test a program to update 6 students records into table into Excel file (using TestNG)

1. Create new Excel Workbook and add the following data:

2. And now save as


2.  Now start Eclipse and install TestNG by click on Help and select Eclipse Marketplace.
3. Search TestNG and hit Enter, and click on Install

3. Now, create new Java Project,  create new Java Class.
4. And Add TestNG Library and jexcelapi JARs.



5. Add these JARs and click on Finish and a window will popup saying do you want to create module? Just click on don’t create.
6. Now create new JAVA Class.
7. Now type the code given below in Pract5.java
package pract5;

import jxl.*;
import jxl.write.*;

import org.testng.annotations.*;
import java.io.*;
public class Pract5 {
	@BeforeClass
	public void f1() {}
	@Test
	public void testImportExport() throws Exception{
		FileInputStream fi = new FileInputStream("/run/media/pranav/Data/Pranav/College/Practical/ST/Book.xls");
		Workbook w = Workbook.getWorkbook(fi);
		Sheet s = w.getSheet(0);
		String a[][]=new String[s.getRows()][s.getColumns()];
		FileOutputStream fo = new FileOutputStream("/run/media/pranav/Data/Pranav/College/Practical/ST/resBook.xls");
		WritableWorkbook wwb = Workbook.createWorkbook(fo);
		WritableSheet ws = wwb.createSheet("result", 0);
		for(int i=0; i<s.getRows();i++)
			for(int j=0; j<s.getColumns();j++) {
				a[i][j]=s.getCell(j,i).getContents();
				Label l2 = new Label(j,i,a[i][j]);
				ws.addCell(l2);
				Label l1 = new Label(6,0,"Result");
				ws.addCell(l1);
			}
		for(int i=1;i<s.getRows();i++) {
			for(int j=2;j<s.getColumns();j++) {
				a[i][j]=s.getCell(j,i).getContents();
				int x = Integer.parseInt(a[i][j]);
				if(x>35) {
					Label l1 = new Label(6,i,"pass");
					ws.addCell(l1);
				}
				else {
					Label l1 = new Label(6,i,"fail");
					ws.addCell(l1);
					break;
				}
			}
		}
		wwb.write();
		wwb.close();
	}
}
8. Now run the file as 1 TestNG test


       Practical No. 6
       
Write & test a program to select the number of students who have scored more than 60 in any one subject (or all subjects) using TestNG.

1. Create new Excel Workbook and add the following data:
2. And now save as

3. Now, create new Java Project,  create new Java Class.
4. And Add TestNG Library and jexcelapi JARs. Into buildpath (classpath)

5. Add these JARs and click on Finish and a window will popup saying do you want to create module? Just click on don’t create.
6. Now create new JAVA Class and type following code:

package pract6;

import jxl.*;
import jxl.write.*;
import java.io.*;
import org.testng.annotations.Test;

public class Pract6 {
    @Test
    public void testImportexport()throws Exception{
        FileInputStream fi = new FileInputStream("/home/pranav/Documents/college/ST/Book2.xls");
        Workbook w = Workbook.getWorkbook(fi);
        Sheet s = w.getSheet(0);
        String a[][] = new String[s.getRows()][s.getColumns()];
        FileOutputStream fo = new FileOutputStream("/home/pranav/Documents/college/ST/resBook2.xls");
        WritableWorkbook wwb = Workbook.createWorkbook(fo);
        WritableSheet ws = wwb.createSheet("result",0);
        int c = 0;
        for(int i=0;i<s.getRows();i++){
            for(int j=0;j<s.getColumns();j++){
                if(i>=1){
                    String b = new String();
                    b = s.getCell(3,i).getContents();
                    int x = Integer.parseInt(b);
                    if(x<60){
                        c++;
                        break;
                    }
                }
                a[i][j] = s.getCell(j,i).getContents();
                Label L2 = new Label(j,i-c,a[i][j]);
                ws.addCell(L2);
            }
        }
        wwb.write();
        wwb.close();
    }
}
7. Now run the file as 1 TestNG test
               Output:



             Practical No. 7

Write and test a program to provide total numbers of objects present / available on the page.

1. Create a new Java Project and create a new Class then add External Selenium JARs

2. Click on Finish and a window will popup saying do you want to create module? Just click on don’t create.
3. Now add the following code in newly created Class.
package pract7;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

public class Pract7{
    public static String driverPath = "usr\\bin\\";

    public static WebDriver driver;

    public static void main (String args[]){
        System.setProperty("webdriver.chrome.driver",driverPath+"chromedriver.exe");
        driver = new ChromeDriver();
        driver.get("https://kirticollege.edu.in/");

        java.util.List<WebElement> links = driver.findElements(By.tagName("a"));
        System.out.println("Total Links are"+links.size());
        for(int i=0;i<links.size();i++){
            System.out.println("Link"+i+"Link name"+links.get(i).getText());
        }
        driver.quit();
    }
}


                   Practical No. 8

Write and test a program to print total numbers of single drop down list items present / available on the page and print selected item.


NOTE: Follow the same steps to create new project and class as Practical 7 for Practical 8, Practical 9 and Practical 10.
code:
package pract8;
import java.util.List;
import java.util.concurrent.TimeUnit;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.Select;
public class Pract8 {
    public static WebDriver driver;
    public static void main(String[] args) throws InterruptedException {
    System.setProperty("webdriver.chrome.driver","usr\\bin\\chromedriver.exe");
    WebDriver driver = new ChromeDriver();
    driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
    driver.get("https://automationexplore.com/selenium-automation-practice-page/");
    Select oSelect = new Select(driver.findElement(By.name("country")));
    oSelect.selectByVisibleText("India");
    Thread.sleep(2000);
    oSelect.selectByIndex(2);
    Thread.sleep(2000);
    List<WebElement> oSize = oSelect.getOptions();
    int iListSize= oSize.size();
    System.out.println("No of items"+iListSize);
    for(int i=0;i<iListSize ; i++) {
        String sValue = oSelect.getOptions().get(i).getText();
        System.out.println(sValue);
        if(sValue.equals("USA")) {
            oSelect.selectByIndex(i);
            break;
        }
    }
    driver.quit();
}


                                  Practical No. 9

Write and test a program to print total numbers of Multiple drop down list items present / available on the page and print selected item.

NOTE: Follow the same steps to create new project and class as Practical 7 for Practical 8, Practical 9 and Practical 10.
package pract9;
import java.util.List;
import java.util.concurrent.TimeUnit;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.Select;
public class pract9 {
    public static WebDriver driver;
    public static void main(String[] args) throws InterruptedException {
    System.setProperty("webdriver.chrome.driver","usr\\bin\\chromedriver.exe");
    WebDriver driver = new ChromeDriver();
    driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
    driver.get("https://automationexplore.com/selenium-automation-practice-page/");
    Select oSelect = new Select(driver.findElement(By.name("skills")));
    oSelect.selectByIndex(0);
    Thread.sleep(2000);
    oSelect.deselectByIndex(0);
    oSelect.selectByVisibleText("Manual Testing");
    Thread.sleep(2000);
    oSelect.deselectByVisibleText("Manual Testing");
    List<WebElement> oSize = oSelect.getOptions();
    int iListSize= oSize.size();
    System.out.println("No of items"+iListSize);
    for(int i=0;i<iListSize ; i++) {
        String sValue = oSelect.getOptions().get(i).getText();
        System.out.println(sValue);
        oSelect.selectByIndex(i);
        Thread.sleep(2000);
    }
    oSelect.deselectAll();
    driver.close();
    }
}


Practical No. 10

Write and test a program to print total numbers of check boxes present / available on the page and print selected check box.

NOTE: Follow the same steps to create new project and class as Practical 7 for Practical 8, Practical 9 and Practical 10.
package pract10;
import java.util.List;
import java.util.concurrent.TimeUnit;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

public class Pract10 {
	public static void main(String[] args) {
		System.setProperty("webdriver.chrome.driver","\\usr\\bin\\chromedriver.exe");
		WebDriver driver = new ChromeDriver();

		driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
		driver.get("https://www.techlistic.com/p/selenium-practice-form.html");
		
		List<WebElement>rdBtn_Gender = driver.findElements(By.id("sex-0"));
		boolean bValue = false;
		bValue = rdBtn_Gender.get(0).isSelected();
		if(bValue == true) {
			rdBtn_Gender.get(1).click();
		}else {
			rdBtn_Gender.get(0).click();
		}
		List<WebElement> chkBx_Profession=driver.findElements(By.name("profession"));
		int iSize = chkBx_Profession.size();
		System.out.println("Checkbox.Size:"+iSize);
		for(int i=0;i<iSize;i++) {
			String sValue = chkBx_Profession.get(i).getAttribute("value");
			System.out.println("Checkbox.Value:"+sValue);
			if(sValue.equalsIgnoreCase("Manual Tester")) {
				chkBx_Profession.get(i).click();		
				break;
			}
		}
		System.out.println("Successsfull");
		driver.quit();
	}
}


