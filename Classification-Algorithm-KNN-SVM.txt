Classification Algorithm - KNN & SVM

library(tidyverse)
> library(class)

> df <- data(iris) ##load data
> head(iris)
> ran <- sample(1:nrow(iris), 0.9 * nrow(iris)) 

> nor <-function(x) { (x -min(x))/(max(x)-min(x))   }

> iris_norm <- as.data.frame(lapply(iris[,c(1,2,3,4)], nor))
> summary(iris_norm)

> iris_train <- iris_norm[ran,]

> iris_test <- iris_norm[-ran,]

> iris_target_category <- iris[ran,5] 

> iris_test_category <- iris[-ran,5]

> pr <- knn(iris_train,iris_test,cl=iris_target_category,k=13)

> tab <- table(pr,iris_test_category)

> accuracy <- function(x){sum(diag(x)/(sum(rowSums(x)))) * 100}
> accuracy(tab)

---------------------------
library(caTools)
library(e1071)

dataset = read.csv('Social_Network_Ads.csv')
dataset = dataset[3:5]

dataset$Purchased = factor(dataset$Purchased, levels = c(0, 1))

set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.75)

training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)

training_set[-3] = scale(training_set[-3])
test_set[-3] = scale(test_set[-3])

classifier = svm(formula = Purchased ~ .,
                 data = training_set,
                 type = 'C-classification',
                 kernel = 'linear')

y_pred = predict(classifier, newdata = test_set[-3])
cm = table(test_set[, 3], y_pred)